ARCHIVE_ENTRY_PERMS(3)   BSD Library Functions Manual   ARCHIVE_ENTRY_PERMS(3)

NNAAMMEE
     aarrcchhiivvee__eennttrryy__ggiidd, aarrcchhiivvee__eennttrryy__sseett__ggiidd, aarrcchhiivvee__eennttrryy__uuiidd,
     aarrcchhiivvee__eennttrryy__sseett__uuiidd, aarrcchhiivvee__eennttrryy__ppeerrmm, aarrcchhiivvee__eennttrryy__sseett__ppeerrmm,
     aarrcchhiivvee__eennttrryy__ssttrrmmooddee, aarrcchhiivvee__eennttrryy__uunnaammee aarrcchhiivvee__eennttrryy__uunnaammee__ww
     aarrcchhiivvee__eennttrryy__sseett__uunnaammee, aarrcchhiivvee__eennttrryy__ccooppyy__uunnaammee,
     aarrcchhiivvee__eennttrryy__ccooppyy__uunnaammee__ww, aarrcchhiivvee__eennttrryy__uuppddaattee__uunnaammee__uuttff88,
     aarrcchhiivvee__eennttrryy__ggnnaammee, aarrcchhiivvee__eennttrryy__ggnnaammee__ww, aarrcchhiivvee__eennttrryy__sseett__ggnnaammee,
     aarrcchhiivvee__eennttrryy__ccooppyy__ggnnaammee, aarrcchhiivvee__eennttrryy__ccooppyy__ggnnaammee__ww,
     aarrcchhiivvee__eennttrryy__uuppddaattee__ggnnaammee__uuttff88, aarrcchhiivvee__eennttrryy__ffffllaaggss,
     aarrcchhiivvee__eennttrryy__ffffllaaggss__tteexxtt, aarrcchhiivvee__eennttrryy__sseett__ffffllaaggss,
     aarrcchhiivvee__eennttrryy__ccooppyy__ffffllaaggss__tteexxtt, aarrcchhiivvee__eennttrryy__ccooppyy__ffffllaaggss__tteexxtt__ww -- func-
     tions for manipulating ownership and permissions in archive entry
     descriptions

LLIIBBRRAARRYY
     Streaming Archive Library (libarchive, -larchive)

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<aarrcchhiivvee__eennttrryy..hh>>

     _g_i_d___t
     aarrcchhiivvee__eennttrryy__ggiidd(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a);

     _v_o_i_d
     aarrcchhiivvee__eennttrryy__sseett__ggiidd(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a, _g_i_d___t _g_i_d);

     _u_i_d___t
     aarrcchhiivvee__eennttrryy__uuiidd(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a);

     _v_o_i_d
     aarrcchhiivvee__eennttrryy__sseett__uuiidd(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a, _u_i_d___t _u_i_d);

     _m_o_d_e___t
     aarrcchhiivvee__eennttrryy__ppeerrmm(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a);

     _v_o_i_d
     aarrcchhiivvee__eennttrryy__sseett__ppeerrmm(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a, _m_o_d_e___t _m_o_d_e);

     _c_o_n_s_t _c_h_a_r _*
     aarrcchhiivvee__eennttrryy__ssttrrmmooddee(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a);

     _c_o_n_s_t _c_h_a_r _*
     aarrcchhiivvee__eennttrryy__ggnnaammee(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a);

     _c_o_n_s_t _w_c_h_a_r___t _*
     aarrcchhiivvee__eennttrryy__ggnnaammee__ww(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a);

     _v_o_i_d
     aarrcchhiivvee__eennttrryy__sseett__ggnnaammee(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a, _c_o_n_s_t _c_h_a_r _*_a);

     _v_o_i_d
     aarrcchhiivvee__eennttrryy__ccooppyy__ggnnaammee(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a, _c_o_n_s_t _c_h_a_r _*_n_a_m_e);

     _v_o_i_d
     aarrcchhiivvee__eennttrryy__ccooppyy__ggnnaammee__ww(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a, _c_o_n_s_t _w_c_h_a_r___t _*_n_a_m_e);

     _i_n_t
     aarrcchhiivvee__eennttrryy__uuppddaattee__ggnnaammee__uuttff88(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a,
         _c_o_n_s_t _c_h_a_r _*_n_a_m_e);

     _c_o_n_s_t _c_h_a_r _*
     aarrcchhiivvee__eennttrryy__uunnaammee(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a);

     _c_o_n_s_t _w_c_h_a_r___t _*
     aarrcchhiivvee__eennttrryy__uunnaammee__ww(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a);

     _v_o_i_d
     aarrcchhiivvee__eennttrryy__sseett__uunnaammee(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a, _c_o_n_s_t _c_h_a_r _*_n_a_m_e);

     _v_o_i_d
     aarrcchhiivvee__eennttrryy__ccooppyy__uunnaammee(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a, _c_o_n_s_t _c_h_a_r _*_n_a_m_e);

     _v_o_i_d
     aarrcchhiivvee__eennttrryy__ccooppyy__uunnaammee__ww(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a, _c_o_n_s_t _w_c_h_a_r___t _*_n_a_m_e);

     _i_n_t
     aarrcchhiivvee__eennttrryy__uuppddaattee__uunnaammee__uuttff88(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a,
         _c_o_n_s_t _c_h_a_r _*_n_a_m_e);

     _v_o_i_d
     aarrcchhiivvee__eennttrryy__ffffllaaggss(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a, _u_n_s_i_g_n_e_d _l_o_n_g _*_s_e_t___b_i_t_s,
         _u_n_s_i_g_n_e_d _l_o_n_g _*_c_l_e_a_r___b_i_t_s);

     _c_o_n_s_t _c_h_a_r _*
     aarrcchhiivvee__eennttrryy__ffffllaaggss__tteexxtt(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a);

     _v_o_i_d
     aarrcchhiivvee__eennttrryy__sseett__ffffllaaggss(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a, _u_n_s_i_g_n_e_d _l_o_n_g _s_e_t___b_i_t_s,
         _u_n_s_i_g_n_e_d _l_o_n_g _c_l_e_a_r___b_i_t_s);

     _c_o_n_s_t _c_h_a_r _*
     aarrcchhiivvee__eennttrryy__ccooppyy__ffffllaaggss__tteexxtt(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a,
         _c_o_n_s_t _c_h_a_r _*_t_e_x_t);

     _c_o_n_s_t _w_c_h_a_r___t _*
     aarrcchhiivvee__eennttrryy__ccooppyy__ffffllaaggss__tteexxtt__ww(_s_t_r_u_c_t _a_r_c_h_i_v_e___e_n_t_r_y _*_a,
         _c_o_n_s_t _w_c_h_a_r___t _*_t_e_x_t);

DDEESSCCRRIIPPTTIIOONN
   UUsseerr iidd,, ggrroouupp iidd aanndd mmooddee
     The functions aarrcchhiivvee__eennttrryy__uuiidd(), aarrcchhiivvee__eennttrryy__ggiidd(), and
     aarrcchhiivvee__eennttrryy__ppeerrmm() can be used to extract the user id, group id and
     permission from the given entry.  The corresponding functions
     aarrcchhiivvee__eennttrryy__sseett__uuiidd(), aarrcchhiivvee__eennttrryy__sseett__ggiidd(), and
     aarrcchhiivvee__eennttrryy__sseett__ppeerrmm() store the given user id, group id and permission
     in the entry.  The permission is also set as side effect of calling
     aarrcchhiivvee__eennttrryy__sseett__mmooddee().

     aarrcchhiivvee__eennttrryy__ssttrrmmooddee() returns a string representation of the permission
     as used by the long mode of ls(1).

   UUsseerr aanndd ggrroouupp nnaammee
     User and group names can be provided in one of three different ways:

     char *     Multibyte strings in the current locale.

     wchar_t *  Wide character strings in the current locale.  The accessor
                functions are named XXXXXX__ww().

     UTF-8      Unicode strings encoded as UTF-8.  This are convience func-
                tions to update both the multibyte and wide character strings
                at the same time.

     aarrcchhiivvee__eennttrryy__sseett__XXXXXX() is an alias for aarrcchhiivvee__eennttrryy__ccooppyy__XXXXXX().

   FFiillee FFllaaggss
     File flags are transparently converted between a bitmap representation
     and a textual format.  For example, if you set the bitmap and ask for
     text, the library will build a canonical text format.  However, if you
     set a text format and request a text format, you will get back the same
     text, even if it is ill-formed.  If you need to canonicalize a textual
     flags string, you should first set the text form, then request the bitmap
     form, then use that to set the bitmap form.  Setting the bitmap format
     will clear the internal text representation and force it to be recon-
     structed when you next request the text form.

     The bitmap format consists of two integers, one containing bits that
     should be set, the other specifying bits that should be cleared.  Bits
     not mentioned in either bitmap will be ignored.  Usually, the bitmap of
     bits to be cleared will be set to zero.  In unusual circumstances, you
     can force a fully-specified set of file flags by setting the bitmap of
     flags to clear to the complement of the bitmap of flags to set.  (This
     differs from fflagstostr(3), which only includes names for set bits.)
     Converting a bitmap to a textual string is a platform-specific operation;
     bits that are not meaningful on the current platform will be ignored.

     The canonical text format is a comma-separated list of flag names.  The
     aarrcchhiivvee__eennttrryy__ccooppyy__ffffllaaggss__tteexxtt() and aarrcchhiivvee__eennttrryy__ccooppyy__ffffllaaggss__tteexxtt__ww()
     functions parse the provided text and sets the internal bitmap values.
     This is a platform-specific operation; names that are not meaningful on
     the current platform will be ignored.  The function returns a pointer to
     the start of the first name that was not recognized, or NULL if every
     name was recognized.  Note that every name -- including names that follow
     an unrecognized name -- will be evaluated, and the bitmaps will be set to
     reflect every name that is recognized.  (In particular, this differs from
     strtofflags(3), which stops parsing at the first unrecognized name.)

SSEEEE AALLSSOO
     archive_entry(3), archive_entry_acl(3), archive_read_disk(3),
     archive_write_disk(3) libarchive(3),

BBUUGGSS
     The platform types _u_i_d___t and _g_i_d___t are often 16 or 32 bit wide.  In this
     case it is possible that the ids can not be correctly restored from ar-
     chives and get truncated.

BSD                            February 2, 2012                            BSD
