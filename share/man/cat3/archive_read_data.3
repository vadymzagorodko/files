ARCHIVE_READ_DATA(3)     BSD Library Functions Manual     ARCHIVE_READ_DATA(3)

NNAAMMEE
     aarrcchhiivvee__rreeaadd__ddaattaa aarrcchhiivvee__rreeaadd__ddaattaa__bblloocckk, aarrcchhiivvee__rreeaadd__ddaattaa__sskkiipp,
     aarrcchhiivvee__rreeaadd__ddaattaa__iinnttoo__ffdd -- functions for reading streaming archives

LLIIBBRRAARRYY
     Streaming Archive Library (libarchive, -larchive)

SSYYNNOOPPSSIISS
     ##iinncclluuddee <<aarrcchhiivvee..hh>>

     _l_a___s_s_i_z_e___t
     aarrcchhiivvee__rreeaadd__ddaattaa(_s_t_r_u_c_t _a_r_c_h_i_v_e _*, _v_o_i_d _*_b_u_f_f, _s_i_z_e___t _l_e_n);

     _i_n_t
     aarrcchhiivvee__rreeaadd__ddaattaa__bblloocckk(_s_t_r_u_c_t _a_r_c_h_i_v_e _*, _c_o_n_s_t _v_o_i_d _*_*_b_u_f_f, _s_i_z_e___t _*_l_e_n,
         _o_f_f___t _*_o_f_f_s_e_t);

     _i_n_t
     aarrcchhiivvee__rreeaadd__ddaattaa__sskkiipp(_s_t_r_u_c_t _a_r_c_h_i_v_e _*);

     _i_n_t
     aarrcchhiivvee__rreeaadd__ddaattaa__iinnttoo__ffdd(_s_t_r_u_c_t _a_r_c_h_i_v_e _*, _i_n_t _f_d);

DDEESSCCRRIIPPTTIIOONN
     aarrcchhiivvee__rreeaadd__ddaattaa()
             Read data associated with the header just read.  Internally, this
             is a convenience function that calls aarrcchhiivvee__rreeaadd__ddaattaa__bblloocckk()
             and fills any gaps with nulls so that callers see a single con-
             tinuous stream of data.
     aarrcchhiivvee__rreeaadd__ddaattaa__bblloocckk()
             Return the next available block of data for this entry.  Unlike
             aarrcchhiivvee__rreeaadd__ddaattaa(), the aarrcchhiivvee__rreeaadd__ddaattaa__bblloocckk() function
             avoids copying data and allows you to correctly handle sparse
             files, as supported by some archive formats.  The library guaran-
             tees that offsets will increase and that blocks will not overlap.
             Note that the blocks returned from this function can be much
             larger than the block size read from disk, due to compression and
             internal buffer optimizations.
     aarrcchhiivvee__rreeaadd__ddaattaa__sskkiipp()
             A convenience function that repeatedly calls
             aarrcchhiivvee__rreeaadd__ddaattaa__bblloocckk() to skip all of the data for this ar-
             chive entry.  Note that this function is invoked automatically by
             aarrcchhiivvee__rreeaadd__nneexxtt__hheeaaddeerr22() if the previous entry was not com-
             pletely consumed.
     aarrcchhiivvee__rreeaadd__ddaattaa__iinnttoo__ffdd()
             A convenience function that repeatedly calls
             aarrcchhiivvee__rreeaadd__ddaattaa__bblloocckk() to copy the entire entry to the pro-
             vided file descriptor.

RREETTUURRNN VVAALLUUEESS
     Most functions return zero on success, non-zero on error.  The possible
     return codes include: AARRCCHHIIVVEE__OOKK (the operation succeeded), AARRCCHHIIVVEE__WWAARRNN
     (the operation succeeded but a non-critical error was encountered),
     AARRCCHHIIVVEE__EEOOFF (end-of-archive was encountered), AARRCCHHIIVVEE__RREETTRRYY (the opera-
     tion failed but can be retried), and AARRCCHHIIVVEE__FFAATTAALL (there was a fatal
     error; the archive should be closed immediately).

     aarrcchhiivvee__rreeaadd__ddaattaa() returns a count of bytes actually read or zero at the
     end of the entry.  On error, a value of AARRCCHHIIVVEE__FFAATTAALL, AARRCCHHIIVVEE__WWAARRNN, or
     AARRCCHHIIVVEE__RREETTRRYY is returned.

EERRRROORRSS
     Detailed error codes and textual descriptions are available from the
     aarrcchhiivvee__eerrrrnnoo() and aarrcchhiivvee__eerrrroorr__ssttrriinngg() functions.

SSEEEE AALLSSOO
     tar(1), libarchive(3), archive_read(3), archive_read_extract(3),
     archive_read_filter(3), archive_read_format(3), archive_read_header(3),
     archive_read_open(3), archive_read_set_options(3), archive_util(3),
     tar(5)

BSD                            February 2, 2012                            BSD
